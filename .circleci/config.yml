version: 2.1

jobs:
  build-and-test:
    docker:
      - image: ubuntu:latest
    environment:
      PYTONGUE_LOG: /tmp/pytongue.log
      BUILD_DIR: zig-out/bin
      FORCE_COLOR: 1
    steps:
      - checkout

      - run:
          name: Setup Zig with Signature Check
          command: |
            ZIG_VERSION="0.14.0"
            ZIG_ARCH="zig-linux-x86_64"
            ZIG_FILENAME="${ZIG_ARCH}-${ZIG_VERSION}.tar.xz"
            ZIG_URL="https://ziglang.org/download/${ZIG_VERSION}/${ZIG_FILENAME}"
            ZIG_SIG_URL="${ZIG_URL}.minisig"

            echo "Downloading Zig..."
            wget "${ZIG_URL}"
            wget "${ZIG_SIG_URL}"

            echo "Verifying Zig signature..."
            # You might need to install minisign if it's not available
            sudo apt-get update
            sudo apt-get install -y minisign

            # Zig's public key (you should verify this key!)
            ZIG_PUBLIC_KEY="RWQRAe5+K035t2uw+Ff9P59N/01c5/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09/09"

            minisign -Vm "${ZIG_FILENAME}" -P "${ZIG_PUBLIC_KEY}" -x "${ZIG_FILENAME}.minisig"

            echo "Extracting and installing Zig..."
            tar -xf "${ZIG_FILENAME}"
            sudo mv "${ZIG_ARCH}-${ZIG_VERSION}/zig" /usr/local/bin
            zig version

      - run:
          name: Build project
          command: zig build

      - run:
          name: Setup Python
          command: |
            sudo apt-get update
            sudo apt-get install -y python3.12 python3-pip
            python3 --version
            pip3 --version

      - run:
          name: Install Python dependencies
          command: |
            python3 -m pip install --upgrade pip
            python3 -m pip install .

      - run:
          name: Run tests
          environment:
            PYTONGUE_TEST_BINARY: /home/circleci/project/${BUILD_DIR}/pytongue
          command: pytest tests/e2e

      - run:
          name: Print test logs
          command: |
            echo "=== Test Logs ==="
            cat ${PYTONGUE_LOG}
          when: on_success

workflows:
  build-and-test-workflow:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - master